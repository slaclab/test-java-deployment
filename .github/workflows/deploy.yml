name: Deployment
on:
    workflow_dispatch:
        inputs:
            deployment_image:
                description: 'Image to deploy'
                required: true
                type: string
concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: true
env:
    DEPLOY_IMAGE: ${{ inputs.deployment_image }}
jobs:
    update-test-deployment:
        runs-on: ubuntu-latest
        environment: test
        steps:
            - name: Checkout source code
              uses: actions/checkout@v3
            - run: |
                echo "Configure deploy with image $DEPLOY_IMAGE"
                ls -la
                tools/set-image-name.sh $DEPLOY_IMAGE production/deployment.yaml
                cat production/deployment.yaml
                tools/set-image-name.sh $DEPLOY_IMAGE test/deployment.yaml
                cat test/deployment.yaml
            - uses: EndBug/add-and-commit@v9
              with:
                # The arguments for the `git add` command (see the paragraph below for more info)
                # Default: '.'
                add: 'test'
            
                # The name of the user that will be displayed as the author of the commit.
                # Default: depends on the default_author input
                author_name: ${{ github.actor }}
            
                # The email of the user that will be displayed as the author of the commit.
                # Default: depends on the default_author input
                author_email: no-reply@github.com
            
                # The name of the custom committer you want to use, if different from the author of the commit.
                # Default: the name of the author (set with either author_name or default_author)
                committer_name: ${{ github.actor }}
            
                # The email of the custom committer you want to use, if different from the author of the commit.
                # Default: the email of the author (set with either author_email or default_author)
                committer_email: no-reply@github.com

                # Determines the way the action fills missing author name and email. Three options are available:
                # - github_actor -> UserName <UserName@users.noreply.github.com>
                # - user_info -> Your Display Name <your-actual@email.com>
                # - github_actions -> github-actions <email associated with the github logo>
                # Default: github_actor
                default_author: github_actor
            
                # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
                # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ. 
                # Default: --tags --force
                fetch: false
            
                # The message for the commit.
                # Default: 'Commit from GitHub Actions (name of the workflow)'
                message: 'Update test deployment to use image $DEPLOY_IMAGE'
            
                # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
                # - ignore -> errors will be logged but the step won't fail
                # - exitImmediately -> the action will stop right away, and the step will fail
                # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
                # Default: ignore
                pathspec_error_handling: exitImmediately
            
                # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
                # Default: true
                push: true

    update-production-deployment:
        runs-on: ubuntu-latest
        environment:
            name: production
            url: https://github.com
        needs: update-test-deployment
        steps:
        - name: "patch configuration for test"
          run: |
                echo "patch prod conf":